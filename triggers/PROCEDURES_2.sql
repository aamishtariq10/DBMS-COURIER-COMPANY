CREATE PROCEDURE spINSERT_INTO_SENDER
		@SENDER_ID INT, @SENDER_NAME VARCHAR(32), @SENDER_CONTACT_INFO VARCHAR(15)
AS
BEGIN
		INSERT INTO SENDER(ID_NUMBER, [NAME], CONTACT_NUMBER) VALUES(@SENDER_ID, @SENDER_NAME, @SENDER_CONTACT_INFO)
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spUPDATE_SENDER_CONTACT
		@SENDER_ID INT, @SENDER_CONTACT_INFO VARCHAR(15)
AS
BEGIN
		UPDATE SENDER SET CONTACT_NUMBER = @SENDER_CONTACT_INFO WHERE ID_NUMBER = @SENDER_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spUPDATE_SENDER_NAME
		@SENDER_ID INT, @SENDER_NAME VARCHAR(32)
AS
BEGIN
		UPDATE SENDER SET [NAME] = @SENDER_NAME WHERE ID_NUMBER = @SENDER_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spRETRIEVE_SENDER_DETAILS
		@SENDER_ID INT 
AS
BEGIN
		SELECT * FROM SENDER WHERE ID_NUMBER = @SENDER_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spDELETE_SENDER_DETAILS
		@SENDER_ID INT
AS
BEGIN
		DELETE FROM SENDER WHERE ID_NUMBER = @SENDER_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spINSERT_INTO_RECEIVER
		@RECEIVER_ID INT, @RECEIVER_NAME VARCHAR(32), @RECEIVER_ADDRESS VARCHAR(100), @RECEIVER_CONTACT_INFO VARCHAR(15)
AS
BEGIN
		INSERT INTO RECEIVER(ID_NUMBER, [NAME], [ADDRESS], CONTACT_NUMBER) VALUES(@RECEIVER_ID, @RECEIVER_NAME, @RECEIVER_ADDRESS, @RECEIVER_CONTACT_INFO)
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spUPDATE_RECEIVER_CONTACT
		@RECEIVER_ID INT, @RECEIVER_CONTACT_INFO VARCHAR(15)
AS
BEGIN
		UPDATE RECEIVER SET CONTACT_NUMBER = @RECEIVER_CONTACT_INFO WHERE ID_NUMBER = @RECEIVER_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spUPDATE_RECEIVER_NAME
		@RECEIVER_ID INT, @RECEIVER_NAME VARCHAR(32)
AS
BEGIN
		UPDATE RECEIVER SET [NAME] = @RECEIVER_NAME WHERE ID_NUMBER = @RECEIVER_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spUPDATE_RECEIVER_ADDRESS
		@RECEIVER_ID INT, @RECEIVER_ADDRESS VARCHAR(32)
AS
BEGIN
		UPDATE RECEIVER SET [ADDRESS] = @RECEIVER_ADDRESS WHERE ID_NUMBER = @RECEIVER_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spRETRIEVE_RECEIVER_DETAILS
		@RECEIVER_ID INT 
AS
BEGIN
		SELECT * FROM RECEIVER WHERE ID_NUMBER = @RECEIVER_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spRETRIEVE_SHIPMENT_TYPE
		@SHIPMENT_TYPE_ID INT
AS
BEGIN
		SELECT * FROM SHIPMENT_TYPE WHERE PK_VALUE_OF_STP = @SHIPMENT_TYPE_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spRETRIEVE_DESTINATION_TYPE
		@DESTINATION_TYPE_ID INT
AS
BEGIN
		SELECT * FROM SHIPMENT_TYPE WHERE PK_VALUE_OF_STP = @DESTINATION_TYPE_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spINSERT_TO_AMOUNT
		@AMOUNT_ID INT, @AMOUNT FLOAT
AS
BEGIN
		INSERT INTO AMOUNT(PK_VALUE_OF_AMT, PRICE_IN_USD) VALUES(@AMOUNT_ID, @AMOUNT)
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spINSERT_INTO_LOGISTIC_DEPARTMENT
		@LOGISTIC_ID INT, @LOGISTIC_NAME VARCHAR(32), @LOGISTIC_DESIGNATION VARCHAR(20), @LOGISTIC_CONTACT_NUMBER VARCHAR(15), @LOGISTIC_ADDRESS VARCHAR(100), @LOGISTIC_SALARY FLOAT
AS
BEGIN
		INSERT INTO LOGISTIC_DEPARTMENT(EMPLOYEE_ID, EMPLOYEE_NAME, EMPLOYEE_DESIGNATION, EMPLOYEE_CONTACT_NUMBER, EMPLOYEE_ADDRESS, EMPLOYEE_SALARY_IN_USD) VALUES(@LOGISTIC_ID, @LOGISTIC_NAME, @LOGISTIC_DESIGNATION, @LOGISTIC_CONTACT_NUMBER, @LOGISTIC_ADDRESS, @LOGISTIC_SALARY)
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spUPDATE_LOGISTIC_NAME
		@LOGISTIC_ID INT, @LOGISTIC_NAME VARCHAR(32)
AS
BEGIN
		UPDATE LOGISTIC_DEPARTMENT SET EMPLOYEE_NAME = @LOGISTIC_NAME WHERE EMPLOYEE_ID = @LOGISTIC_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spUPDATE_LOGISTIC_DESIGNATION
		@LOGISTIC_ID INT, @LOGISTIC_DESIGNATION VARCHAR(20)
AS
BEGIN
		UPDATE LOGISTIC_DEPARTMENT SET EMPLOYEE_DESIGNATION = @LOGISTIC_DESIGNATION WHERE EMPLOYEE_ID = @LOGISTIC_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spUPDATE_LOGISTIC_SALARY
		@LOGISTIC_ID INT, @LOGISTIC_SALARY FLOAT
AS
BEGIN
		UPDATE LOGISTIC_DEPARTMENT SET EMPLOYEE_SALARY_IN_USD = @LOGISTIC_SALARY WHERE EMPLOYEE_ID = @LOGISTIC_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spUPDATE_LOGISTIC_NUMBER
		@LOGISTIC_ID INT, @LOGISTIC_NUMBER VARCHAR(15)
AS
BEGIN
		UPDATE LOGISTIC_DEPARTMENT SET EMPLOYEE_CONTACT_NUMBER = @LOGISTIC_NUMBER WHERE EMPLOYEE_ID = @LOGISTIC_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spUPDATE_LOGISTIC_ADDRESS
		@LOGISTIC_ID INT, @LOGISTIC_ADDRESS VARCHAR(32)
AS
BEGIN
		UPDATE LOGISTIC_DEPARTMENT SET EMPLOYEE_ADDRESS = @LOGISTIC_ADDRESS WHERE EMPLOYEE_ID = @LOGISTIC_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spDELETE_LOGISTIC_DETAILS
		@LOGISTIC_ID INT
AS
BEGIN
		DELETE FROM LOGISTIC_DEPARTMENT WHERE EMPLOYEE_ID = @LOGISTIC_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spINSERT_SHIPMENT_TIME
		@ST_ID INT, @DAY VARCHAR(15), @DATE VARCHAR(32), @TIME VARCHAR(32)
AS
BEGIN
		INSERT INTO SHIPMENT_TIME([PK_VALUE_OF_ST], [DAY], [DATE], [TIME]) VALUES(@ST_ID, @DAY, @DATE, @TIME)
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spUPDATE_SHIPMENT_DAY
		@SHIPMENT_TIME_ID INT, @SHIPMENT_TIME_DAY VARCHAR(20)
AS
BEGIN
		UPDATE SHIPMENT_TIME SET [DAY] = @SHIPMENT_TIME_DAY WHERE PK_VALUE_OF_ST = @SHIPMENT_TIME_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spUPDATE_SHIPMENT_DATE
		@SHIPMENT_TIME_ID INT, @SHIPMENT_TIME_DATE VARCHAR(20)
AS
BEGIN
		UPDATE SHIPMENT_TIME SET [DATE] = @SHIPMENT_TIME_DATE WHERE PK_VALUE_OF_ST = @SHIPMENT_TIME_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spUPDATE_SHIPMENT_TIME
		@SHIPMENT_TIME_ID INT, @SHIPMENT_TIME_T VARCHAR(20)
AS
BEGIN
		UPDATE SHIPMENT_TIME SET [TIME] = @SHIPMENT_TIME_T WHERE PK_VALUE_OF_ST = @SHIPMENT_TIME_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spRETRIEVE_SHIPMENT_TIME
		@SHIPMENT_TIME_ID INT
AS
BEGIN
		SELECT * FROM SHIPMENT_TIME WHERE PK_VALUE_OF_ST = @SHIPMENT_TIME_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spINSERT_INTO_DESTINATION_BRANCH
		@DESTINATION_BRANCH_ID INT, @DESTINATION_BRANCH_ADDRESS VARCHAR(100), 
		@DESTINATION_BRANCH_EMAIL VARCHAR(50), 
		@DESTINATION_BRANCH_CONTACT_INFO VARCHAR(15)
AS
BEGIN
		INSERT INTO DESTINATION_BRANCH(BRANCH_ID, BRANCH_ADDRESS, BRANCH_EMAIL, 
		BRANCH_CONTACT_NUMBER) VALUES(@DESTINATION_BRANCH_ID, 
		@DESTINATION_BRANCH_ADDRESS, @DESTINATION_BRANCH_EMAIL, 
		@DESTINATION_BRANCH_CONTACT_INFO)
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spUPDATE_DESTINATION_BRANCH_ADDRESS
		@DESTINATION_BRANCH_ID INT, @DESTINATION_BRANCH_ADDRESS VARCHAR(100)
AS
BEGIN
		UPDATE DESTINATION_BRANCH SET BRANCH_ADDRESS = @DESTINATION_BRANCH_ADDRESS WHERE BRANCH_ID = @DESTINATION_BRANCH_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spUPDATE_DESTINATION_BRANCH_EMAIL
		@DESTINATION_BRANCH_ID INT, @DESTINATION_BRANCH_EMAIL VARCHAR(50)
AS
BEGIN
		UPDATE DESTINATION_BRANCH SET BRANCH_EMAIL = @DESTINATION_BRANCH_EMAIL WHERE BRANCH_ID = @DESTINATION_BRANCH_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spUPDATE_DESTINATION_BRANCH_CONTACT
		@DESTINATION_BRANCH_ID INT, @DESTINATION_BRANCH_CONTACT VARCHAR(15)
AS
BEGIN
		UPDATE DESTINATION_BRANCH SET BRANCH_CONTACT_NUMBER = @DESTINATION_BRANCH_CONTACT WHERE BRANCH_ID = @DESTINATION_BRANCH_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spDELETE_DESTINATION_BRANCH_DETAILS
		@DESTINATION_BRANCH_ID INT
AS
BEGIN
		DELETE FROM DESTINATION_BRANCH WHERE BRANCH_ID = @DESTINATION_BRANCH_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spRETRIEVE_DESTINATION_BRANCH_DETAILS
		@DESTINATION_BRANCH_ID INT
AS
BEGIN
		SELECT * FROM DESTINATION_BRANCH WHERE BRANCH_ID = @DESTINATION_BRANCH_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spINSERT_ARRIVAL_TIME
		@AT_ID INT, @DAY VARCHAR(15), @DATE VARCHAR(32), @TIME VARCHAR(32)
AS
BEGIN
		INSERT INTO ARRIVAL_TIME(PK_VALUE_OF_AT,[DAY], [DATE], [TIME]) VALUES(@AT_ID, @DAY, @DATE, @TIME)
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spUPDATE_ARRIVAL_DAY
		@ARRIVAL_TIME_ID INT, @ARRIVAL_TIME_DAY VARCHAR(20)
AS
BEGIN
		UPDATE ARRIVAL_TIME SET [DAY] = @ARRIVAL_TIME_DAY WHERE PK_VALUE_OF_AT = @ARRIVAL_TIME_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spUPDATE_ARRIVAL_DATE
		@ARRIVAL_TIME_ID INT, @ARRIVAL_TIME_DATE VARCHAR(20)
AS
BEGIN
		UPDATE ARRIVAL_TIME SET [DATE] = @ARRIVAL_TIME_DATE WHERE PK_VALUE_OF_AT = @ARRIVAL_TIME_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spUPDATE_ARRIVAL_TIME
		@ARRIVAL_TIME_ID INT, @ARRIVAL_TIME_T VARCHAR(20)
AS
BEGIN
		UPDATE ARRIVAL_TIME SET [TIME] = @ARRIVAL_TIME_T WHERE PK_VALUE_OF_AT = @ARRIVAL_TIME_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spINSERT_INTO_CONSIGNOR
		@CONSIGNOR_ID INT, @CONSIGNOR_NAME VARCHAR(32), @CONSIGNOR_CONTACT_INFO VARCHAR(15), 
		@CONSIGNOR_ADDRESS VARCHAR(100), @CONSIGNOR_SALARY FLOAT
AS
BEGIN
		INSERT INTO CONSIGNOR(ID_NUMBER, CONSIGNOR_NAME, CONSIGNOR_CONTACT_NUMBER, CONSIGNOR_ADDRESS,
		CONSIGNOR_SALARY_IN_USD) VALUES(@CONSIGNOR_ID, @CONSIGNOR_NAME, @CONSIGNOR_CONTACT_INFO, 
		@CONSIGNOR_ADDRESS, @CONSIGNOR_SALARY)
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spUPDATE_CONSIGNOR_CONTACT
		@CONSIGNOR_ID INT, @CONSIGNOR_CONTACT_INFO VARCHAR(15)
AS
BEGIN
		UPDATE CONSIGNOR SET CONSIGNOR_CONTACT_NUMBER = @CONSIGNOR_CONTACT_INFO WHERE ID_NUMBER = @CONSIGNOR_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spUPDATE_CONSIGNOR_NAME
		@CONSIGNOR_ID INT, @CONSIGNOR_NAME VARCHAR(15)
AS
BEGIN
		UPDATE CONSIGNOR SET CONSIGNOR_NAME = @CONSIGNOR_NAME WHERE ID_NUMBER = @CONSIGNOR_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spUPDATE_CONSIGNOR_ADDRESS
		@CONSIGNOR_ID INT, @CONSIGNOR_ADDRESS VARCHAR(100)
AS
BEGIN
		UPDATE CONSIGNOR SET CONSIGNOR_ADDRESS = @CONSIGNOR_ADDRESS WHERE ID_NUMBER = @CONSIGNOR_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spUPDATE_CONSIGNOR_SALARY
		@CONSIGNOR_ID INT, @CONSIGNOR_SALARY FLOAT
AS
BEGIN
		UPDATE CONSIGNOR SET CONSIGNOR_SALARY_IN_USD = @CONSIGNOR_SALARY WHERE ID_NUMBER = @CONSIGNOR_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spDELETE_CONSIGNOR_DETAILS
		@CONSIGNOR_ID INT
AS
BEGIN
		DELETE FROM CONSIGNOR WHERE ID_NUMBER = @CONSIGNOR_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spRETRIEVE_CONSIGNOR_DETAILS
		@CONSIGNOR_ID INT 
AS
BEGIN
		SELECT * FROM CONSIGNOR WHERE ID_NUMBER = @CONSIGNOR_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spRETRIEVE_STATUS
		@STATUS_ID INT 
AS
BEGIN
		SELECT * FROM [STATUS] WHERE PK_VALUE_OF_ST = @STATUS_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROCEDURE spINSERT_INTO_OPERATOR
		@OPERATIR_ID INT, @OPERATOR_NAME VARCHAR(32), @OPERATOR_JOINING_DATE VARCHAR(50), @OPERATOR_SALARY FLOAT
AS
BEGIN
		INSERT INTO OPERATOR(ID_NUMBER, [NAME], JOINING_DATE, SALARY_IN_USD) VALUES
		(@OPERATIR_ID, @OPERATOR_NAME, @OPERATOR_JOINING_DATE, @OPERATOR_SALARY)
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spUPDATE_OPERATOR_NAME
		@OPERATOR_ID INT, @OPERATOR_NAME VARCHAR(32)
AS
BEGIN
		UPDATE OPERATOR SET [NAME] = @OPERATOR_NAME WHERE ID_NUMBER = @OPERATOR_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spUPDATE_OPERATOR_JOD
		@OPERATOR_ID INT, @OPERATOR_JOINING_DATE VARCHAR(50)
AS
BEGIN
		UPDATE OPERATOR SET JOINING_DATE = @OPERATOR_JOINING_DATE WHERE ID_NUMBER = @OPERATOR_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spUPDATE_OPERATOR_SALARY
		@OPERATOR_ID INT, @OPERATOR_SALARY FLOAT
AS
BEGIN
		UPDATE OPERATOR SET SALARY_IN_USD = @OPERATOR_SALARY WHERE ID_NUMBER = @OPERATOR_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spRETRIEVE_OPERATOR_DETAILS
		@OPERATOR_ID INT 
AS
BEGIN
		SELECT * FROM OPERATOR WHERE ID_NUMBER = @OPERATOR_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spDELETE_OPERATOR_DETAILS
		@OPERATOR_ID INT
AS
BEGIN
		DELETE FROM OPERATOR WHERE ID_NUMBER = @OPERATOR_ID
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spINSERT_TO_PACKAGE
		@PACKAGE_ID VARCHAR(20), @PACKAGE_TYPE VARCHAR(50), @PACKAGE_WEIGHT_IN_KG FLOAT, @SENDER_ID INT, @RECEIVER_ID INT, @SHIPMENT_TYPE_ID INT, @DESTINATION_TYPE_ID INT, @AMOUNT_ID INT, @LOGISTIC_DEPARTMENT_ID INT, @TIME_OF_SHIPMENT INT, @DESTINATION_BRANCH_ID INT, @TIME_OF_ARRIVAL INT, @CONSIGNOR_ID INT, @STATUS_ID INT
AS
BEGIN
		INSERT INTO PACKAGE (PACKAGE_ID, PACKAGE_TYPE, PACKAGE_WEIGHT_IN_KG, 
		SENDER_ID, RECEIVER_ID, SHIPMENT_TYPE_ID, DESTINATION_TYPE_ID, AMOUNT_ID,
		LOGISTIC_DEPARTMENT_ID, TIME_OF_SHIPMENT, DESTINATION_BRANCH_ID, TIME_OF_ARRIVAL,
		CONSIGNOR_ID, STATUS_ID) values
		(@PACKAGE_ID, @PACKAGE_TYPE, @PACKAGE_WEIGHT_IN_KG, @SENDER_ID, @RECEIVER_ID,
		@SHIPMENT_TYPE_ID, @DESTINATION_TYPE_ID, @AMOUNT_ID, @LOGISTIC_DEPARTMENT_ID,@TIME_OF_SHIPMENT, 
		@DESTINATION_BRANCH_ID, @TIME_OF_ARRIVAL, @CONSIGNOR_ID, @STATUS_ID);
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spRETRIEVE_PACKAGE_DETAILS
		@PACKAGE_ID VARCHAR(20)
AS
BEGIN
		SELECT * FROM PACKAGE WHERE PACKAGE_ID = @PACKAGE_ID
		SELECT * FROM SENDER WHERE ID_NUMBER = (SELECT SENDER_ID FROM PACKAGE WHERE PACKAGE_ID = @PACKAGE_ID)
		SELECT * FROM RECEIVER WHERE ID_NUMBER = (SELECT RECEIVER_ID FROM PACKAGE WHERE PACKAGE_ID = @PACKAGE_ID)
		SELECT * FROM SHIPMENT_TYPE WHERE PK_VALUE_OF_STP = (SELECT SHIPMENT_TYPE_ID FROM PACKAGE WHERE PACKAGE_ID = @PACKAGE_ID)
		SELECT * FROM DESTINATION_TYPE WHERE PK_VALUE_OF_DTP = (SELECT DESTINATION_TYPE_ID FROM PACKAGE WHERE PACKAGE_ID = @PACKAGE_ID)
		SELECT * FROM AMOUNT WHERE PK_VALUE_OF_AMT = (SELECT AMOUNT_ID FROM PACKAGE WHERE PACKAGE_ID = @PACKAGE_ID)
		SELECT * FROM LOGISTIC_DEPARTMENT WHERE EMPLOYEE_ID = (SELECT LOGISTIC_DEPARTMENT_ID FROM PACKAGE WHERE PACKAGE_ID = @PACKAGE_ID)
		SELECT * FROM SHIPMENT_TIME WHERE PK_VALUE_OF_ST = (SELECT TIME_OF_SHIPMENT FROM PACKAGE WHERE PACKAGE_ID = @PACKAGE_ID)
		SELECT * FROM DESTINATION_BRANCH WHERE BRANCH_ID = (SELECT DESTINATION_BRANCH_ID FROM PACKAGE WHERE PACKAGE_ID = @PACKAGE_ID)
		SELECT * FROM ARRIVAL_TIME WHERE PK_VALUE_OF_AT = (SELECT TIME_OF_ARRIVAL FROM PACKAGE WHERE PACKAGE_ID = @PACKAGE_ID)
		SELECT * FROM CONSIGNOR WHERE ID_NUMBER = (SELECT CONSIGNOR_ID FROM PACKAGE WHERE PACKAGE_ID = @PACKAGE_ID)
		SELECT * FROM [STATUS] WHERE PK_VALUE_OF_ST = (SELECT STATUS_ID FROM PACKAGE WHERE PACKAGE_ID = @PACKAGE_ID)
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spDAILY_REPORT
		
AS
BEGIN
		DECLARE @EMPLOYEE_SALARY FLOAT
		DECLARE @CONSIGNOR_SALARY FLOAT
		DECLARE @OPERATOR_SALARY FLOAT
		DECLARE @INCOME FLOAT
		DECLARE @TOTAL_SALARIES FLOAT
		DECLARE @FINAL_INCOME FLOAT

		SET @INCOME = (SELECT SUM(PRICE_IN_USD) FROM AMOUNT)
		SET @EMPLOYEE_SALARY = (SELECT SUM(EMPLOYEE_SALARY_IN_USD) FROM LOGISTIC_DEPARTMENT)
		SET @CONSIGNOR_SALARY = (SELECT SUM(CONSIGNOR_SALARY_IN_USD) FROM CONSIGNOR)
		SET @OPERATOR_SALARY = (SELECT SUM(SALARY_IN_USD) FROM OPERATOR)
		SET @TOTAL_SALARIES = @EMPLOYEE_SALARY+@CONSIGNOR_SALARY+@OPERATOR_SALARY
		SET @FINAL_INCOME = @INCOME-@TOTAL_SALARIES

		INSERT INTO DAILY_REPORT(DAILY_TOTAL_INCOME, DAILY_EMPLOYEE_SALARY, DAILY_CONSIGNOR_SALARY, DAILY_OPERATOR_SALARY, DAILY_FINAL_INCOME) VALUES(@INCOME, @EMPLOYEE_SALARY, @CONSIGNOR_SALARY, @OPERATOR_SALARY, @FINAL_INCOME)
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spWEEKLY_REPORT
AS
BEGIN
		DECLARE @EMPLOYEE_SALARY FLOAT
		DECLARE @CONSIGNOR_SALARY FLOAT
		DECLARE @OPERATOR_SALARY FLOAT
		DECLARE @INCOME FLOAT
		DECLARE @TOTAL_SALARIES FLOAT
		DECLARE @FINAL_INCOME FLOAT

		SET @INCOME = (SELECT SUM(PRICE_IN_USD) FROM AMOUNT) * 7
		SET @EMPLOYEE_SALARY = (SELECT SUM(EMPLOYEE_SALARY_IN_USD) FROM LOGISTIC_DEPARTMENT) * 7
		SET @CONSIGNOR_SALARY = (SELECT SUM(CONSIGNOR_SALARY_IN_USD) FROM CONSIGNOR) * 7
		SET @OPERATOR_SALARY = (SELECT SUM(SALARY_IN_USD) FROM OPERATOR) * 7
		SET @TOTAL_SALARIES = @EMPLOYEE_SALARY+@CONSIGNOR_SALARY+@OPERATOR_SALARY
		SET @FINAL_INCOME = @INCOME-@TOTAL_SALARIES

		INSERT INTO WEEKLY_REPORT(WEEKLY_TOTAL_INCOME, WEEKLY_EMPLOYEE_SALARY, WEEKLY_CONSIGNOR_SALARY, 
		WEEKLY_OPERATOR_SALARY, WEEKLY_FINAL_INCOME) VALUES(@INCOME, @EMPLOYEE_SALARY, @CONSIGNOR_SALARY,
		@OPERATOR_SALARY, @FINAL_INCOME)
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spMONTHLY_REPORT
AS
BEGIN
		DECLARE @EMPLOYEE_SALARY FLOAT
		DECLARE @CONSIGNOR_SALARY FLOAT
		DECLARE @OPERATOR_SALARY FLOAT
		DECLARE @INCOME FLOAT
		DECLARE @TOTAL_SALARIES FLOAT
		DECLARE @FINAL_INCOME FLOAT

		SET @INCOME = (SELECT SUM(PRICE_IN_USD) FROM AMOUNT) * 30
		SET @EMPLOYEE_SALARY = (SELECT SUM(EMPLOYEE_SALARY_IN_USD) FROM LOGISTIC_DEPARTMENT) * 30
		SET @CONSIGNOR_SALARY = (SELECT SUM(CONSIGNOR_SALARY_IN_USD) FROM CONSIGNOR) * 30
		SET @OPERATOR_SALARY = (SELECT SUM(SALARY_IN_USD) FROM OPERATOR) * 30
		SET @TOTAL_SALARIES = @EMPLOYEE_SALARY+@CONSIGNOR_SALARY+@OPERATOR_SALARY
		SET @FINAL_INCOME = @INCOME-@TOTAL_SALARIES

		INSERT INTO MONTHLY_REPORT(MONTHLY_TOTAL_INCOME, MONTHLY_EMPLOYEE_SALARY, MONTHLY_CONSIGNOR_SALARY, MONTHLY_OPERATOR_SALARY, MONTHLY_FINAL_INCOME) VALUES(@INCOME, @EMPLOYEE_SALARY, @CONSIGNOR_SALARY, @OPERATOR_SALARY, @FINAL_INCOME)
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spYEARLY_REPORT
AS
BEGIN
		DECLARE @EMPLOYEE_SALARY FLOAT
		DECLARE @CONSIGNOR_SALARY FLOAT
		DECLARE @OPERATOR_SALARY FLOAT
		DECLARE @INCOME FLOAT
		DECLARE @TOTAL_SALARIES FLOAT
		DECLARE @FINAL_INCOME FLOAT

		SET @INCOME = (SELECT SUM(PRICE_IN_USD) FROM AMOUNT) * 365
		SET @EMPLOYEE_SALARY = (SELECT SUM(EMPLOYEE_SALARY_IN_USD) FROM LOGISTIC_DEPARTMENT) * 365
		SET @CONSIGNOR_SALARY = (SELECT SUM(CONSIGNOR_SALARY_IN_USD) FROM CONSIGNOR) * 365
		SET @OPERATOR_SALARY = (SELECT SUM(SALARY_IN_USD) FROM OPERATOR) * 365
		SET @TOTAL_SALARIES = @EMPLOYEE_SALARY+@CONSIGNOR_SALARY+@OPERATOR_SALARY
		SET @FINAL_INCOME = @INCOME-@TOTAL_SALARIES

		INSERT INTO YEARLY_REPORT(YEARLY_TOTAL_INCOME, YEARLY_EMPLOYEE_SALARY,YEARLY_CONSIGNOR_SALARY, 
		YEARLY_OPERATOR_SALARY, YEARLY_FINAL_INCOME) VALUES(@INCOME, @EMPLOYEE_SALARY, @CONSIGNOR_SALARY, 
		@OPERATOR_SALARY, @FINAL_INCOME)
END
--------------------------------------------------------------------------------------------------------
GO
CREATE PROC spREPORT
AS
BEGIN
		SELECT * FROM DAILY_REPORT
		SELECT * FROM WEEKLY_REPORT
		SELECT * FROM MONTHLY_REPORT
		SELECT * FROM YEARLY_REPORT
END
--------------------------------------------------------------------------------------------------------